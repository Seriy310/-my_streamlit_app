import streamlit as st
import csv
import os
from datetime import datetime

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
st.set_page_config(page_title="–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è –≤ –∫–∞–≤'—è—Ä–Ω—é", layout="centered")
st.title("–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è –≤ –∫–∞–≤'—è—Ä–Ω—é")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—ñ–≤ —É CSV —Ñ–∞–π–ª
def save_expenses(expenses):
    file_name = 'expenses_history.csv'
    with open(file_name, mode='a', newline='') as file:
        writer = csv.writer(file)
        if file.tell() == 0:  # –Ø–∫—â–æ —Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π, –¥–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            writer.writerow(["–ù–∞–∑–≤–∞", "–°—É–º–∞", "–î–∞—Ç–∞"])
        for expense in expenses:
            writer.writerow([expense['name'], expense['amount'], expense['date']])

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç —ñ–∑ —Ñ–∞–π–ª—É
if 'expenses' not in st.session_state:
    st.session_state.expenses = []
    if os.path.exists("expenses_history.csv"):
        with open("expenses_history.csv", newline='') as file:
            reader = csv.DictReader(file)
            for row in reader:
                st.session_state.expenses.append({
                    'name': row['–ù–∞–∑–≤–∞'],
                    'amount': round(float(row['–°—É–º–∞']) / 10) * 10,  # –û–∫—Ä—É–≥–ª–µ–Ω–Ω—è –¥–æ –¥–µ—Å—è—Ç–∫—ñ–≤
                    'date': row['–î–∞—Ç–∞']
                })

# –í–∏–¥–∞—Ç–∫–∏
st.subheader("–í–∏–¥–∞—Ç–∫–∏:")
total_expenses = sum(exp['amount'] for exp in st.session_state.expenses)
st.write(f"–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏–¥–∞—Ç–∫—ñ–≤: {total_expenses:.2f} z≈Ç" if total_expenses > 0 else "–í–∏–¥–∞—Ç–∫—ñ–≤ –Ω–µ–º–∞—î")

# –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó –≤–∏–¥–∞—Ç–∫—ñ–≤
if st.button("üìú –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –≤–∏–¥–∞—Ç–∫—ñ–≤"):
    st.switch_page("pages/history.py")

# –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—ñ–≤ (–°–ø–∏—Å–æ–∫)
with st.expander("‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤—ñ –≤–∏–¥–∞—Ç–∫–∏"):
    with st.form("add_expense_form"):
        expense_list = st.text_area(
            "–í–≤–µ–¥—ñ—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∏–¥–∞—Ç–∫—ñ–≤ —É —Ñ–æ—Ä–º–∞—Ç—ñ: –ù–∞–∑–≤–∞ - –°—É–º–∞ (–∫–æ–∂–µ–Ω —Ä—è–¥–æ–∫ –æ–∫—Ä–µ–º–∏–π)",
            placeholder="–ö–∞–≤–∞ - 50\n–û—Ä–µ–Ω–¥–∞ - 1200\n–ó–∞–∫—É–ø—ñ–≤–ª—è - 300"
        )
        expense_date = st.date_input("–î–∞—Ç–∞ –≤–∏–¥–∞—Ç–∫—ñ–≤", min_value=datetime.today(), value=datetime.today())

        submit_button = st.form_submit_button("–ó–±–µ—Ä–µ–≥—Ç–∏ –≤–∏–¥–∞—Ç–∫–∏")
        
        if submit_button and expense_list.strip():
            new_expenses = []
            for line in expense_list.split("\n"):
                parts = line.split("-")
                if len(parts) == 2:
                    name, amount_str = parts[0].strip(), parts[1].strip()
                    try:
                        amount = round(float(amount_str.replace("z≈Ç", "").strip()) / 10) * 10  # –û–∫—Ä—É–≥–ª–µ–Ω–Ω—è –¥–æ –¥–µ—Å—è—Ç–∫—ñ–≤
                        new_expenses.append({'name': name, 'amount': amount, 'date': expense_date.strftime("%Y-%m-%d")})
                    except ValueError:
                        st.error(f"–ü–æ–º–∏–ª–∫–∞ —É —Ä—è–¥–∫—É: {line}")
            
            if new_expenses:
                st.session_state.expenses.extend(new_expenses)
                save_expenses(new_expenses)
                st.success("‚úÖ –í–∏–¥–∞—Ç–∫–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
                st.rerun()  # –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è

# –ü–æ–¥–∞—Ç–æ–∫
st.subheader("–ü–æ–¥–∞—Ç–æ–∫:")
tax_percentage = st.number_input("–í–≤–µ–¥—ñ—Ç—å –≤—ñ–¥—Å–æ—Ç–æ–∫ –ø–æ–¥–∞—Ç–∫—É:", min_value=0.0, max_value=100.0, value=5.0, step=0.5)
tax_amount = total_expenses * (tax_percentage / 100) if total_expenses > 0 else 0
st.write(f"–ü–æ–¥–∞—Ç–æ–∫ ({tax_percentage}%): {tax_amount:.2f} z≈Ç" if total_expenses > 0 else "–ü–æ–¥–∞—Ç–æ–∫ –±—É–¥–µ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—ñ–≤.")

# –ß–∏—Å—Ç–∏–π –∑–∞—Ä–æ–±—ñ—Ç–æ–∫
st.subheader("–ß–∏—Å—Ç–∏–π –∑–∞—Ä–æ–±—ñ—Ç–æ–∫:")
income = st.number_input("–í–≤–µ–¥—ñ—Ç—å —â–æ–º—ñ—Å—è—á–Ω–∏–π –¥–æ—Ö—ñ–¥ (–∑–ª–æ—Ç–∏—Ö):", min_value=0.0, step=100.0)

# –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (–¥–∏–Ω–∞–º—ñ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è)
net_profit = income - total_expenses - tax_amount
st.write(f"üí∞ –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫: {net_profit:.2f} z≈Ç")
