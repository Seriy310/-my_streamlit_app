import streamlit as st
import csv
import os
from datetime import datetime

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
st.set_page_config(page_title="–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è –≤ –∫–∞–≤'—è—Ä–Ω—é", layout="centered")
st.title("–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è –≤ –∫–∞–≤'—è—Ä–Ω—é")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—ñ–≤ —É CSV —Ñ–∞–π–ª
def save_expense(expense):
    file_name = 'expenses_history.csv'
    with open(file_name, mode='a', newline='') as file:
        writer = csv.writer(file)
        if file.tell() == 0:  # –Ø–∫—â–æ —Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π, –¥–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
            writer.writerow(["–ù–∞–∑–≤–∞", "–°—É–º–∞", "–î–∞—Ç–∞"])
        writer.writerow([expense['name'], expense['amount'], expense['date']])

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤–∏—Ç—Ä–∞—Ç —ñ–∑ —Ñ–∞–π–ª—É
if 'expenses' not in st.session_state:
    st.session_state.expenses = []
    if os.path.exists("expenses_history.csv"):
        with open("expenses_history.csv", newline='') as file:
            reader = csv.DictReader(file)
            for row in reader:
                st.session_state.expenses.append({
                    'name': row['–ù–∞–∑–≤–∞'],
                    'amount': float(row['–°—É–º–∞']),
                    'date': row['–î–∞—Ç–∞']
                })

# –í–∏–¥–∞—Ç–∫–∏
st.subheader("–í–∏–¥–∞—Ç–∫–∏:")
total_expenses = sum(exp['amount'] for exp in st.session_state.expenses)
st.write(f"–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏–¥–∞—Ç–∫—ñ–≤: {total_expenses:.2f} z≈Ç" if total_expenses > 0 else "–í–∏–¥–∞—Ç–∫—ñ–≤ –Ω–µ–º–∞—î")

# –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥—É –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó –≤–∏–¥–∞—Ç–∫—ñ–≤
if st.button("üìú –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –≤–∏–¥–∞—Ç–∫—ñ–≤"):
    st.switch_page("pages/history.py")

# –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—ñ–≤
with st.expander("‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –≤–∏–¥–∞—Ç–æ–∫"):
    with st.form("add_expense_form"):
        expense_name = st.text_input("–ù–∞–∑–≤–∞ –≤–∏–¥–∞—Ç–∫—É")
        expense_amount_str = st.text_input("–°—É–º–∞ –≤–∏–¥–∞—Ç–∫—É", placeholder="–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –≤ –∑–ª–æ—Ç–∏—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 50)")

        try:
            expense_amount = float(expense_amount_str.replace("z≈Ç", "").strip()) if expense_amount_str else None
        except ValueError:
            expense_amount = None
            st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É —Å—É–º—É.")

        expense_date = st.date_input("–î–∞—Ç–∞ –≤–∏–¥–∞—Ç–∫—É", min_value=datetime.today(), value=datetime.today())

        submit_button = st.form_submit_button("–ó–±–µ—Ä–µ–≥—Ç–∏ –≤–∏–¥–∞—Ç–æ–∫")
        
        if submit_button and expense_amount is not None:
            new_expense = {
                'name': expense_name,
                'amount': expense_amount,
                'date': expense_date.strftime("%Y-%m-%d")
            }
            st.session_state.expenses.append(new_expense)
            save_expense(new_expense)  # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—É
            st.success("‚úÖ –í–∏–¥–∞—Ç–æ–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
            st.rerun()  # –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è

# –ü–æ–¥–∞—Ç–æ–∫
st.subheader("–ü–æ–¥–∞—Ç–æ–∫:")
tax_percentage = st.number_input("–í–≤–µ–¥—ñ—Ç—å –≤—ñ–¥—Å–æ—Ç–æ–∫ –ø–æ–¥–∞—Ç–∫—É:", min_value=0.0, max_value=100.0, value=5.0, step=0.5)
tax_amount = total_expenses * (tax_percentage / 100) if total_expenses > 0 else 0
st.write(f"–ü–æ–¥–∞—Ç–æ–∫ ({tax_percentage}%): {tax_amount:.2f} z≈Ç" if total_expenses > 0 else "–ü–æ–¥–∞—Ç–æ–∫ –±—É–¥–µ —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–¥–∞—Ç–∫—ñ–≤.")

# –ß–∏—Å—Ç–∏–π –∑–∞—Ä–æ–±—ñ—Ç–æ–∫
st.subheader("–ß–∏—Å—Ç–∏–π –∑–∞—Ä–æ–±—ñ—Ç–æ–∫:")
income = st.number_input("–í–≤–µ–¥—ñ—Ç—å —â–æ–º—ñ—Å—è—á–Ω–∏–π –¥–æ—Ö—ñ–¥ (–∑–ª–æ—Ç–∏—Ö):", min_value=0.0, step=100.0)

# –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ (–¥–∏–Ω–∞–º—ñ—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è)
net_profit = income - total_expenses - tax_amount
st.write(f"üí∞ –ß–∏—Å—Ç–∏–π –ø—Ä–∏–±—É—Ç–æ–∫: {net_profit:.2f} z≈Ç")
